apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  generation: 1
  labels:
    prometheus: k8s
    role: alert-rules
  name: prometheus-k8s-fake-rules-1
  namespace: openshift-monitoring
  resourceVersion: '903731'
  selfLink: >-
    /apis/monitoring.coreos.com/v1/namespaces/openshift-monitoring/prometheusrules/prometheus-k8s-fake-rules-1
spec:
  groups:
    - name: k8sfake.rules
      rules:
        - expr: >
            sum(rate(container_cpu_usage_seconds_total{job="federatorai-emulator-1",
            image!="", container_name!=""}[5m])) by (namespace)
          record: 'namespace:container_cpu_usage_seconds_total:sum_rate'
        - expr: |
            sum by (namespace, pod_name, container_name) (
              rate(container_cpu_usage_seconds_total{job="federatorai-emulator-1", image!="", container_name!=""}[5m])
            )
          record: >-
            namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate
        - expr: >
            sum(container_memory_usage_bytes{job="federatorai-emulator-1",
            image!="", container_name!=""}) by (namespace)
          record: 'namespace:container_memory_usage_bytes:sum'
    - name: node.rules
      rules:
        - expr: sum(min(kube_pod_info) by (node))
          record: ':kube_pod_info_node_count:'
        - expr: |
            count by (node) (sum by (node, cpu) (
              node_cpu{job="federatorai-emulator-1"}
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            ))
          record: 'node:node_num_cpu:sum'
        - expr: |
            1 - avg(rate(node_cpu{job="federatorai-emulator-1",mode="idle"}[1m]))
          record: ':node_cpu_utilisation:avg1m'
        - expr: |
            1 - avg by (node) (
              rate(node_cpu{job="federatorai-emulator-1",mode="idle"}[1m])
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:)
          record: 'node:node_cpu_utilisation:avg1m'
        - expr: |
            sum(node_load1{job="federatorai-emulator-1"})
            /
            sum(node:node_num_cpu:sum)
          record: ':node_cpu_saturation_load1:'
        - expr: |
            sum by (node) (
              node_load1{job="federatorai-emulator-1"}
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
            /
            node:node_num_cpu:sum
          record: 'node:node_cpu_saturation_load1:'
        - expr: >
            1 -

            sum(node_memory_MemFree{job="federatorai-emulator-1"} +
            node_memory_Cached{job="federatorai-emulator-1"} +
            node_memory_Buffers{job="federatorai-emulator-1"})

            /

            sum(node_memory_MemTotal{job="federatorai-emulator-1"})
          record: ':node_memory_utilisation:'
        - expr: >
            sum(node_memory_MemFree{job="federatorai-emulator-1"} +
            node_memory_Cached{job="federatorai-emulator-1"} +
            node_memory_Buffers{job="federatorai-emulator-1"})
          record: ':node_memory_MemFreeCachedBuffers:sum'
        - expr: |
            sum(node_memory_MemTotal{job="federatorai-emulator-1"})
          record: ':node_memory_MemTotal:sum'
        - expr: |
            sum by (node) (
              (node_memory_MemFree{job="federatorai-emulator-1"} + node_memory_Cached{job="federatorai-emulator-1"} + node_memory_Buffers{job="federatorai-emulator-1"})
              * on (namespace, pod) group_left(node)
                node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_memory_bytes_available:sum'
        - expr: |
            sum by (node) (
              node_memory_MemTotal{job="federatorai-emulator-1"}
              * on (namespace, pod) group_left(node)
                node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_memory_bytes_total:sum'
        - expr: >
            (node:node_memory_bytes_total:sum -
            node:node_memory_bytes_available:sum)

            /

            scalar(sum(node:node_memory_bytes_total:sum))
          record: 'node:node_memory_utilisation:ratio'
        - expr: |
            1e3 * sum(
              (rate(node_vmstat_pgpgin{job="federatorai-emulator-1"}[1m])
             + rate(node_vmstat_pgpgout{job="federatorai-emulator-1"}[1m]))
            )
          record: ':node_memory_swap_io_bytes:sum_rate'
        - expr: |
            1 -
            sum by (node) (
              (node_memory_MemFree{job="federatorai-emulator-1"} + node_memory_Cached{job="federatorai-emulator-1"} + node_memory_Buffers{job="federatorai-emulator-1"})
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
            /
            sum by (node) (
              node_memory_MemTotal{job="federatorai-emulator-1"}
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_memory_utilisation:'
        - expr: |
            1e3 * sum by (node) (
              (rate(node_vmstat_pgpgin{job="federatorai-emulator-1"}[1m])
             + rate(node_vmstat_pgpgout{job="federatorai-emulator-1"}[1m]))
             * on (namespace, pod) group_left(node)
               node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_memory_swap_io_bytes:sum_rate'
        - expr: >
            avg(irate(node_disk_io_time_ms{job="federatorai-emulator-1",device=~"(sd|xvd|nvme).+"}[1m])
            / 1e3)
          record: ':node_disk_utilisation:avg_irate'
        - expr: |
            avg by (node) (
              irate(node_disk_io_time_ms{job="federatorai-emulator-1",device=~"(sd|xvd|nvme).+"}[1m]) / 1e3
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_disk_utilisation:avg_irate'
        - expr: >
            avg(irate(node_disk_io_time_weighted{job="federatorai-emulator-1",device=~"(sd|xvd|nvme).+"}[1m])
            / 1e3)
          record: ':node_disk_saturation:avg_irate'
        - expr: |
            avg by (node) (
              irate(node_disk_io_time_weighted{job="federatorai-emulator-1",device=~"(sd|xvd|nvme).+"}[1m]) / 1e3
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_disk_saturation:avg_irate'
        - expr: >
            sum(irate(node_network_receive_bytes{job="federatorai-emulator-1",device="eth0"}[1m]))
            +

            sum(irate(node_network_transmit_bytes{job="federatorai-emulator-1",device="eth0"}[1m]))
          record: ':node_net_utilisation:sum_irate'
        - expr: |
            sum by (node) (
              (irate(node_network_receive_bytes{job="federatorai-emulator-1",device="eth0"}[1m]) +
              irate(node_network_transmit_bytes{job="federatorai-emulator-1",device="eth0"}[1m]))
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_net_utilisation:sum_irate'
        - expr: >
            sum(irate(node_network_receive_drop{job="federatorai-emulator-1",device="eth0"}[1m]))
            +

            sum(irate(node_network_transmit_drop{job="federatorai-emulator-1",device="eth0"}[1m]))
          record: ':node_net_saturation:sum_irate'
        - expr: |
            sum by (node) (
              (irate(node_network_receive_drop{job="federatorai-emulator-1",device="eth0"}[1m]) +
              irate(node_network_transmit_drop{job="federatorai-emulator-1",device="eth0"}[1m]))
            * on (namespace, pod) group_left(node)
              node_namespace_pod:kube_pod_info:
            )
          record: 'node:node_net_saturation:sum_irate'
    - name: k8s.rules
      rules:
        - expr: >
            sum(rate(container_cpu_usage_seconds_total{job="federatorai-emulator-1",
            image!="", container_name!=""}[5m])) by (namespace)
          record: 'namespace:container_cpu_usage_seconds_total:sum_rate'
        - expr: |
            sum by (namespace, pod_name, container_name) (
              rate(container_cpu_usage_seconds_total{job="federatorai-emulator-1", image!="", container_name!=""}[5m])
            )
          record: >-
            namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate
        - expr: >
            sum(container_memory_usage_bytes{job="federatorai-emulator-1",
            image!="", container_name!=""}) by (namespace)
          record: 'namespace:container_memory_usage_bytes:sum'
